---
import BaseLayout from '../../../layouts/BaseLayout.astro'
import BlogPost from '../../../components/BlogPost.astro'
import { posts } from '../../../scripts/posts'
import { getLangFromUrl } from '../../../i18n/utils'
import { siteTitle } from '../../../constants'

export async function getStaticPaths() {
	const tags = [...new Set(posts.reduce((tags, post) => {
		tags = [
			...tags,
			...post.data.tags
		]
		return tags
	}, []))]

	return tags.map(tag => ({
		params: { tag },
		props: { filteredPosts: posts.filter(post => post.data.tags.includes(tag)).sort() }
	}))
}

const lang = getLangFromUrl(Astro.url)
const subtitle = 'tag'
const { tag } = Astro.params
const { filteredPosts } = Astro.props
const translatedPosts = filteredPosts.filter(post => post.slug.includes(`${lang}/`))
const pageTitle = siteTitle + ' - ' + tag + ' ' + subtitle
---
<BaseLayout pageTitle={pageTitle}>
  <h1>Related posts</h1>
  <p>Posts tagged with <em>{tag}</em>.</p>
  <ul>
    {translatedPosts.map(post => <BlogPost
			date={post.data.pubDate}
			minRead={post.data.minRead}
			title={post.data.title}
			url={`/${lang}/blog/${post.slug.slice(3)}`}
			heading={2}
			size={'heading-5'}
		/>)}
  </ul>
</BaseLayout>

<style is:global>
  main {
    align-self: center;
    max-width: 1248px;
		width: calc(100% - 2rem);
  }
</style>

<style>
  ul {
		display: grid;
		gap: 1rem;
		grid-template-columns: 100%;
		grid-template-rows: auto;
		list-style-type: none;
		margin-top: 2rem;
		padding: 0;
	}

	@media screen and (min-width: 636px) {
		ul {
			grid-template-columns: repeat(2, 1fr);
		}
	}

	@media screen and (min-width: 1248px) {
		ul {
			grid-template-columns: repeat(3, 1fr);
		}
	}
</style>